{"version":3,"file":"static/js/906.907ee3e9.chunk.js","mappings":"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","sources":["modules/ContactForm/fields.js","webpack://react-homework-template/./src/modules/ContactForm/contact-form.module.css?d899","modules/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/modules/Filter/filter.module.scss?f50b","modules/Filter/Filter.jsx","webpack://react-homework-template/./src/modules/ContactList/contact-list.module.scss?81aa","modules/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","webpack://react-homework-template/./src/shared/components/Title/title.module.css?e9d1","shared/components/Title/Title.jsx"],"sourcesContent":["const fields = {\n  name: {\n    label: 'Name',\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    required: true,\n    placeholder: 'enter name...',\n  },\n\n  number: {\n    label: 'Number',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    type: 'tel',\n    name: 'number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    required: true,\n    placeholder: 'enter number...',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contact-form_form__KERgr\"};","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Title from 'shared/components/Title/Title';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\nimport {\n  fetchContacts,\n  addContact,\n} from '../../redux/contacts/contacts-operations';\nimport fields from './fields';\n\nimport styles from './contact-form.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number }) => {\n    const result = dispatch(addContact({ name, number }));\n    return result;\n  };\n\n  const handleChangeName = ({ target: { value } }) => {\n    setName(value);\n  };\n\n  const handleChangeNumber = ({ target: { value } }) => {\n    setNumber(value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact({ name, number }).then(\n      response =>\n        response.type === 'contacts/addContact/fulfilled' && resetForm()\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <Title text=\"Phonebook\" />\n      <TextField onChange={handleChangeName} value={name} {...fields.name} />\n      <TextField\n        onChange={handleChangeNumber}\n        value={number}\n        {...fields.number}\n      />\n      <Button type=\"submit\" text=\"Add contact\" />\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"filter_title__+Z6XL\",\"input\":\"filter_input__akMgQ\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport styles from './filter.module.scss';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <h2 className={styles.title}>Contacts</h2>\n      <label>\n        Find contacts by name:\n        <input\n          onChange={handleFilter}\n          name=\"filter\"\n          placeholder=\"filter contacts...\"\n          value={filter}\n          className={styles.input}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__inua9\",\"item\":\"contact-list_item__daVQ0\",\"marker\":\"contact-list_marker__H2ijg\",\"btn\":\"contact-list_btn__gWG8c\",\"icon\":\"contact-list_icon__EyxxY\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { AiOutlineDelete, AiOutlinePhone } from 'react-icons/ai';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\n\nimport styles from './contact-list.module.scss';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const contactList = filteredContacts.map(contact => {\n    const handleRemoveContact = id => {\n      dispatch(deleteContact(id));\n    };\n\n    return (\n      <li key={contact.id} className={styles.item}>\n        <p className={styles.marker}>\n          <AiOutlinePhone className={styles.icon} />\n        </p>\n        <span>\n          {contact.name}: {contact.number}\n        </span>\n\n        <button\n          className={styles.btn}\n          onClick={() => handleRemoveContact(contact.id)}\n          type=\"button\"\n        >\n          <AiOutlineDelete className={styles.icon} />\n        </button>\n      </li>\n    );\n  });\n\n  return <ul className={styles.list}>{contactList}</ul>;\n};\n\nexport default ContactList;\n","import ContactForm from 'modules/ContactForm/ContactForm';\nimport Filter from 'modules/Filter/Filter';\nimport ContactList from 'modules/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <div>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","export const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items || [];\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.items.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__uXPTj\"};","import styles from './button.module.scss';\n\nconst Button = ({ text, type }) => {\n  return (\n    <button type={type} className={styles.btn}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"text-field_input__YM8fs\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport styles from './text-field.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <label className={styles.label} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className={styles.input}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__T6+0F\"};","import styles from './title.module.css';\n\nconst Title = ({ text }) => {\n  return <h1 className={styles.title}>{text}</h1>;\n};\n\nexport default Title;\n"],"names":["name","label","title","type","pattern","required","placeholder","number","useState","setName","setNumber","dispatch","useDispatch","useEffect","fetchContacts","onSubmit","event","preventDefault","addContact","handleAddContact","then","response","className","styles","Title","text","TextField","onChange","value","target","fields","Button","getFilter","filter","useSelector","setFilter","filteredContacts","getFilteredContacts","contactList","map","contact","onClick","id","deleteContact","contacts","items","normalizedFilter","toLowerCase","includes","handleChange","props","useMemo","nanoid","htmlFor"],"sourceRoot":""}